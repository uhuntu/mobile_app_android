apply plugin: 'android'

//**CUSTOM TASKS**//

/**
 * Copies mapping from build output folder into own output folder.
 * Caution: This task assumes that folder outputs and proguard exists and mapping is in sub sub folder of proguard folder. If anything changes in gradle build configuration, this task has to be updated
 */
task copyMapping {
    doLast {
        copy {
            from(new File(new File(buildDir.getPath(), "outputs"), "mapping").listFiles()[0].listFiles()[0]) {
                include '**/mapping.txt'
            }
            into new File(projectDir.parent, "outputs")
            includeEmptyDirs = false
        }
        println "Proguard mapping copied"
    }
}

/**
 * Initialize copy of mapping.txt after proguard task is performed
 */
gradle.taskGraph.afterTask { Task task, TaskState state ->
    if (task.name.startsWith("proguard")) {
        copyMapping.execute()
    }
}

android {
    compileSdkVersion 33
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId project.mPackageName
        minSdkVersion 14
        targetSdkVersion 33
        versionCode Integer.parseInt(project.mBuild)
        versionName project.mVersionName
    }

    signingConfigs {
        release {
            keyAlias 'easy'
            storeFile file("../keystore/" + project.mKeyFile)
            storePassword 'easy848'
            keyPassword 'easy848'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.dev'
        }
        //beta build that is sent to hockeyapp for testing purposes
        beta {
            applicationIdSuffix '.beta'
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'AndroidManifest.xml'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:22.2.0'

    implementation 'net.hockeyapp.android:HockeySDK:3.0.2'
    implementation 'com.squareup.retrofit:retrofit:1.8.0'
    implementation 'com.squareup.picasso:picasso:2.4.0'
    implementation 'com.jakewharton:butterknife:6.0.0'
    implementation('de.greenrobot:eventbus:2.2.0') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    implementation('de.keyboardsurfer.android.widget:crouton:1.8.4@aar') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
    implementation 'com.squareup.okhttp:okhttp-urlconnection:2.0.0-RC2'
    implementation 'com.squareup.okhttp:okhttp:2.0.0-RC2'
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'de.greenrobot:greendao:1.3.7'
    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    implementation 'com.commonsware.cwac:endless:1.2.3'

    implementation 'com.melnykov:floatingactionbutton:1.2.0'

    implementation 'io.github.inflationx:calligraphy3:3.1.1'
    implementation 'io.github.inflationx:viewpump:2.0.3'

    implementation project(":materialwidget")
    implementation('com.afollestad.material-dialogs:core:0.8.5.9@aar') {
        transitive = true
    }
    implementation 'me.grantland:autofittextview:0.2.1'

    testImplementation 'junit:junit:4.12'
}